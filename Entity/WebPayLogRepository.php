<?php

namespace LeoX\WebPayPlusBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * FileRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WebPayLogRepository extends EntityRepository {

    public function findLastLog($session) {
        $em = $this->getEntityManager();
        $dql = 'SELECT l
                FROM WebPayPlusBundle:WebPayLog l
                WHERE l.sesion =:sesion
                ORDER BY l.id DESC';
        $company = $em->createQuery($dql);
        $company->setParameter('sesion', $session);
        $company->setMaxResults(1);
        return $company->getOneOrNullResult();
    }

    public function findLastLogByBooking($token) {
        $em = $this->getEntityManager();
        $dql = 'SELECT l
                FROM WebPayPlusBundle:WebPayLog l
                WHERE l.ordenCompra = :token 
                ORDER BY l.id DESC';
        $company = $em->createQuery($dql);
        $company->setParameter('token', $token);
        $company->setMaxResults(1);
        return $company->getOneOrNullResult();
    }

    public function findLastLogByAuth($token) {
        $em = $this->getEntityManager();
        $dql = 'SELECT l
                FROM WebPayPlusBundle:WebPayLog l
                WHERE l.ordenCompra = :token AND l.authorizationCode IS NOT NULL
                ORDER BY l.id DESC';
        $company = $em->createQuery($dql);
        $company->setParameter('token', $token);
         $company->setMaxResults(1);
        return $company->getOneOrNullResult();
    }

    public function findLogAuthorizedDuplicate($token) {
        $em = $this->getEntityManager();
        $dql = 'SELECT l
                FROM WebPayPlusBundle:WebPayLog l
                WHERE l.ordenCompra = :token AND (l.authorizationCode IS NOT NULL AND l.authorizationCode != :badcode)
                ORDER BY l.id DESC';
        $company = $em->createQuery($dql);
        $company->setParameter('token', $token);
        $company->setParameter('badcode', '000000');
        return $company->getResult();
    }

    public function findLastLogByToken($token_ws) {
        $em = $this->getEntityManager();
        $dql = 'SELECT l
                FROM WebPayPlusBundle:WebPayLog l
                WHERE l.tokenWs = :token 
                ORDER BY l.id DESC';
        $company = $em->createQuery($dql);
        $company->setParameter('token', $token_ws);
        $company->setMaxResults(1);
        return $company->getOneOrNullResult();
    }

}
